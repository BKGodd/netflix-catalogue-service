version: '3.8'

services:
  app:
    container_name: app
    depends_on:
      esdb:
        condition: service_healthy
    build:
      context: ./backend
    expose:
      - 8000
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    environment:
      ELASTIC_USERNAME: ${ELASTIC_USERNAME}
      ELASTIC_PASSWORD: ${ELASTIC_PASSWORD}
      ELASTIC_INDEX: ${ELASTIC_INDEX}
      ELASTIC_PORT: ${ELASTIC_PORT}
      ESDB_CERT: /usr/share/elasticsearch/config/certs/ca/ca.crt

  angular:
    container_name: angular
    build: ./frontend
    ports:
      - ${APP_PORT}:80
    depends_on:
      - app

  setup:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.4.3
    container_name: setup_certs
    volumes:
      - certs:/usr/share/elasticsearch/config/certs
    user: "0"
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: esdb\n"\
          "    dns:\n"\
          "      - esdb\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Setting file permissions"
        chown -R root:root config/certs;
        chmod 755 -R config/certs;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://esdb:${ELASTIC_PORT} | grep -q "missing authentication credentials"; do sleep 2; done;
        echo "All done!";
      '
    healthcheck:
      test: ["CMD-SHELL", "[ -f config/certs/esdb/esdb.crt ]"]
      interval: 1s
      timeout: 5s
      retries: 120



volumes:
  certs:
  esdb_data:
